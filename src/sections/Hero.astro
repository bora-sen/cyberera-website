<section class="w-full min-h-screen bg-[url('/assets/images/hero_bg.jpg')] bg-cover bg-center text-black">
  <a class="xl:text-[20rem] lg:text-[14rem] md:text-[12rem] text-7xl font-display leading-none z-40" href="#">CYBERERA</a>

  <img
    class="invisible lg:visible absolute lg:right-3 lg:top-[4rem] lg:h-[30rem] md:right-4 md:top-2 md:h-[20rem] z-20"
    src="/assets/images/gifs/samurai_head.gif"
    alt=""
  />

  <!-- Hero Section Decal -->
  <div class="invisible lg:visible text-black absolute py-4 px-12 border-2 border-black rounded-tl-full ml-4 rounded-br-full z-20">
    <div class="flex items-center justify-center gap-4">
      <div class="w-[10rem]">
        <img src="/assets/images/decals/y2k_decal_1.svg" class="w-full h-full" alt="" />
      </div>
      <div class="font-heading flex flex-col justify-between h-full">
        <span>Made By <a href="https://bborasen.com/" class="text-red-200">BORA</a></span>
        <span>Developed && Designed With Beauty of Passion</span>
      </div>
      <img class="w-[10rem]" src="/assets/images/gifs/shoryuken.gif" alt="" />
    </div>
  </div>

  <!-- WEBGL Canvas -->
  <canvas id="webGLRenderer" class="absolute bottom-0 z-10 lg:right-16" width="1300" height="750"></canvas>
</section>

<script>
  import * as THREE from "three"
  import { GLTFLoader } from "three/addons/loaders/GLTFLoader"
  import gsap from "gsap"

  async function main() {
    function createPointLight(x, y, z, color, intensity, decay) {
      const newLight = new THREE.PointLight(color, intensity, decay)
      newLight.position.set(x, y, z)
      scene.add(newLight)
    }
    const canvas = document.getElementById("webGLRenderer")
    const scene = new THREE.Scene()

    const renderer = new THREE.WebGLRenderer({ canvas, alpha: true })

    if (window.innerWidth <= 1250) {
      renderer.setSize(window.innerWidth, window.innerHeight)
    }

    const camera = new THREE.PerspectiveCamera(70, canvas.clientWidth / canvas.clientHeight, 0.1, 1000)

    const loader = new GLTFLoader()
    const loadedScene = await loader.loadAsync("/assets/model/katanas.glb")
    const loadedModel = await loadedScene.scene.children[0]

    loadedModel.position.x = 0
    loadedModel.position.y = 0.3
    loadedModel.position.z = -0.3

    loadedModel.rotation.x = -1.2
    loadedModel.rotation.y = 0
    loadedModel.rotation.z = 1.5

    console.log(await loadedScene)

    scene.add(await loadedScene.scene)

    gsap.from(await loadedModel.position, {
      x: 0,
      y: 0,
      z: 0,
      duration: 2,
      ease: "power4.Out",
    })

    gsap.from(await loadedModel.rotation, {
      x: -1.5,
      y: 0,
      z: 0,
      duration: 2,
      ease: "power4.Out",
    })

    createPointLight(0, 2, 0, 0xff0000, 1, 100)
    createPointLight(0, 2, 5, 0x0000ff, 1, 100)
    createPointLight(0, 3, 0, 0x000000, 1, 100)
    const ambient = new THREE.AmbientLight({ color: 0x000000, intensity: 0.2 })
    scene.add(ambient)

    function animate() {
      requestAnimationFrame(animate)
      renderer.render(scene, camera)
    }
    animate()
  }
  main()
</script>
